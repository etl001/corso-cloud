kind: Deployment
apiVersion: apps/v1
metadata:
  name: etl-nginx
  labels:
    app: etl-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etl-nginx
  template:
    metadata:
      labels:
        app: etl-nginx
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      volumes:
        - name: nginx-conf-volume
          configMap:
            name: nginx-conf
      containers:
        - name: nginx-unprivileged
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          securityContext:  
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          resources:
            limits:
              cpu: 2000m
              memory: 2048Mi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - mountPath:  /etc/nginx/conf.d/default.conf
              subPath: default.conf
              name:  nginx-conf-volume
            - mountPath: /usr/share/nginx/html/index.html
              subPath: index.html
              name: nginx-conf-volume
          ports:
          - containerPort: 8080   
            name: etl-nginx
          readinessProbe: 
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe: 
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 60 
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
